!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN	Employ_system/makefile	/^BIN = Employee_system$/;"	m
CXX	Employ_system/makefile	/^CXX = g++ $/;"	m
Database	Employ_system/Database.hpp	/^	class Database$/;"	c	namespace:Records
Employee	Employ_system/Employee.cpp	/^	Employee::Employee(const std::string& firstName,$/;"	f	class:Records::Employee
Employee	Employ_system/Employee.hpp	/^	class Employee$/;"	c	namespace:Records
OBJS	Employ_system/makefile	/^OBJS = $(patsubst %cpp, %o, $(SRCS))$/;"	m
Records	Employ_system/Database.cpp	/^namespace Records{$/;"	n	file:
Records	Employ_system/Database.hpp	/^namespace Records{$/;"	n
Records	Employ_system/Employee.cpp	/^namespace Records {$/;"	n	file:
Records	Employ_system/Employee.hpp	/^namespace Records {$/;"	n
SRCS	Employ_system/makefile	/^SRCS = $(wildcard *.cpp)  $/;"	m
STDFLAGS	Employ_system/makefile	/^STDFLAGS = c++17$/;"	m
addEployee	Employ_system/Database.cpp	/^	Employee& Database::addEployee(const std::string& firstname,$/;"	f	class:Records::Database
demote	Employ_system/Employee.cpp	/^	void Employee::demote(int demeritAmount)$/;"	f	class:Records::Employee
display	Employ_system/Employee.cpp	/^	void Employee::display() const$/;"	f	class:Records::Employee
displayAll	Employ_system/Database.cpp	/^	void Database::displayAll() const$/;"	f	class:Records::Database
displayCurrent	Employ_system/Database.cpp	/^	void Database::displayCurrent() const$/;"	f	class:Records::Database
displayFormer	Employ_system/Database.cpp	/^	void Database::displayFormer() const$/;"	f	class:Records::Database
displayMenu	Employ_system/test.cpp	/^int displayMenu()$/;"	f
doDemote	Employ_system/test.cpp	/^void doDemote(Database& db)$/;"	f
doFire	Employ_system/test.cpp	/^void doFire(Database& db)$/;"	f
doHire	Employ_system/test.cpp	/^void doHire(Database& db)$/;"	f
doPromote	Employ_system/test.cpp	/^void doPromote(Database& db)$/;"	f
fire	Employ_system/Employee.cpp	/^	void Employee::fire()$/;"	f	class:Records::Employee
getEmployeeNumber	Employ_system/Employee.cpp	/^	int Employee::getEmployeeNumber() const	$/;"	f	class:Records::Employee
getEployee	Employ_system/Database.cpp	/^	Employee& Database::getEployee(const std::string& firstname,$/;"	f	class:Records::Database
getEployee	Employ_system/Database.cpp	/^	Employee& Database::getEployee(int employeeNumber)$/;"	f	class:Records::Database
getFirstName	Employ_system/Employee.cpp	/^	const std::string& Employee::getFirstName() const	$/;"	f	class:Records::Employee
getLastName	Employ_system/Employee.cpp	/^	const std::string& Employee::getLastName() const	$/;"	f	class:Records::Employee
getSalary	Employ_system/Employee.cpp	/^	int Employee::getSalary() const	$/;"	f	class:Records::Employee
hire	Employ_system/Employee.cpp	/^	void Employee::hire()$/;"	f	class:Records::Employee
isHired	Employ_system/Employee.cpp	/^	bool Employee::isHired() const$/;"	f	class:Records::Employee
kDefaultStartingSalary	Employ_system/Employee.hpp	/^	const int kDefaultStartingSalary = 3000;$/;"	m	namespace:Records
kFirstEmployeeNumber	Employ_system/Database.hpp	/^	const int kFirstEmployeeNumber = 1000;$/;"	m	namespace:Records
mEmployeeNumber	Employ_system/Employee.hpp	/^			int mEmployeeNumber = -1;$/;"	m	class:Records::Employee
mEmployees	Employ_system/Database.hpp	/^			std::vector<Employee> mEmployees;$/;"	m	class:Records::Database
mFirstName	Employ_system/Employee.hpp	/^			std::string mFirstName;$/;"	m	class:Records::Employee
mHired	Employ_system/Employee.hpp	/^			bool mHired = false;$/;"	m	class:Records::Employee
mLastName	Employ_system/Employee.hpp	/^			std::string mLastName;$/;"	m	class:Records::Employee
mNextEmployeeNumber	Employ_system/Database.hpp	/^			int mNextEmployeeNumber = kFirstEmployeeNumber;$/;"	m	class:Records::Database
mSalary	Employ_system/Employee.hpp	/^			int mSalary = kDefaultStartingSalary;$/;"	m	class:Records::Employee
main	Employ_system/test.cpp	/^int main()$/;"	f
main	mycode.cpp	/^int main()$/;"	f
main	test.cpp	/^int main()$/;"	f
makeSum	test.cpp	/^int makeSum(initializer_list<int> lst)$/;"	f
promote	Employ_system/Employee.cpp	/^	void Employee::promote(int raiseAmount)$/;"	f	class:Records::Employee
setEmployeeNumber	Employ_system/Employee.cpp	/^	void Employee::setEmployeeNumber(int employeeNumber)$/;"	f	class:Records::Employee
setFirstName	Employ_system/Employee.cpp	/^	void Employee::setFirstName(const std::string& firstName)$/;"	f	class:Records::Employee
setLastName	Employ_system/Employee.cpp	/^	void Employee::setLastName(const std::string& lastName)$/;"	f	class:Records::Employee
setSalary	Employ_system/Employee.cpp	/^	void Employee::setSalary(int newSalary)$/;"	f	class:Records::Employee
